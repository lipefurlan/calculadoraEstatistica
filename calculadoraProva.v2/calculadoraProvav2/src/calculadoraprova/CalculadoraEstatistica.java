/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package calculadoraprova;

import java.awt.Color;
import java.io.BufferedReader;
import java.io.File;
import java.io.FileReader;
import java.io.FileWriter;
import java.text.NumberFormat;
import java.util.StringTokenizer;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableModel;
import org.jfree.chart.ChartFactory;
import org.jfree.chart.ChartFrame;
import org.jfree.chart.ChartPanel;
import org.jfree.chart.JFreeChart;
import org.jfree.chart.axis.NumberAxis;
import org.jfree.chart.axis.NumberTickUnit;
import org.jfree.chart.plot.CategoryPlot;
import org.jfree.chart.plot.PlotOrientation;
import org.jfree.chart.plot.XYPlot;
import org.jfree.data.category.DefaultCategoryDataset;
import org.jfree.data.statistics.HistogramDataset;
import org.jfree.data.statistics.HistogramType;
import org.jfree.data.xy.IntervalXYDataset;
import org.jfree.data.xy.XYDataset;
import org.jfree.data.xy.XYSeries;
import org.jfree.data.xy.XYSeriesCollection;

/**
 *
 * @author lipef
 */
public class CalculadoraEstatistica extends javax.swing.JFrame {

    /**
     * Creates new form CalculadoraEstatistica
     */
    public CalculadoraEstatistica() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        txt_valor = new javax.swing.JTextField();
        txt_freq = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        txt_media = new javax.swing.JTextField();
        jButton3 = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();
        txt_mediana = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jComboBox1 = new javax.swing.JComboBox<>();
        jLabel7 = new javax.swing.JLabel();
        jComboBox2 = new javax.swing.JComboBox<>();
        txt_moda = new javax.swing.JTextField();
        txt_quartil = new javax.swing.JTextField();
        jTextField1 = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jTextFieldDelim = new javax.swing.JTextField();
        jButton5 = new javax.swing.JButton();
        jButton6 = new javax.swing.JButton();
        jButton7 = new javax.swing.JButton();
        txt_var = new javax.swing.JTextField();
        txt_despadrao = new javax.swing.JTextField();
        txt_cv = new javax.swing.JTextField();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        jComboBox3 = new javax.swing.JComboBox<>();
        jPanel1 = new javax.swing.JPanel();
        jButton8 = new javax.swing.JButton();
        txt_percentil = new javax.swing.JTextField();
        jLabel14 = new javax.swing.JLabel();
        jButton9 = new javax.swing.JButton();
        jButton10 = new javax.swing.JButton();
        jButton11 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setPreferredSize(new java.awt.Dimension(1024, 768));

        jLabel1.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel1.setText("Valor:");

        jLabel2.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel2.setText("Frequência:");

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Valor", "Frequência"
            }
        ));
        jScrollPane1.setViewportView(jTable1);

        jButton1.setText("Calcular");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setText("Menu");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jLabel3.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel3.setText("Média");

        txt_media.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txt_mediaActionPerformed(evt);
            }
        });

        jButton3.setText("Adicionar");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        jButton4.setText("Apagar linha");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        jLabel4.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel4.setText("Mediana");

        jLabel5.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel5.setText("Moda");

        jLabel6.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel6.setText("Quartil");

        jComboBox1.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "1", "3" }));

        jLabel7.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel7.setText("Percentil");

        jComboBox2.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        jComboBox2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBox2ActionPerformed(evt);
            }
        });

        txt_quartil.setMinimumSize(new java.awt.Dimension(7, 28));

        jTextField1.setEditable(false);

        jLabel8.setText("Arquivo CSV:");

        jLabel9.setText("Delimitador: ");

        jTextFieldDelim.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        jTextFieldDelim.setText(";");
        jTextFieldDelim.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextFieldDelimActionPerformed(evt);
            }
        });

        jButton5.setText("Procurar");
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });

        jButton6.setText("Carregar");
        jButton6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton6ActionPerformed(evt);
            }
        });

        jButton7.setText("Exportar");
        jButton7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton7ActionPerformed(evt);
            }
        });

        txt_cv.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txt_cvActionPerformed(evt);
            }
        });

        jLabel10.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel10.setText("Variancia");

        jLabel11.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel11.setText("Desvio Padrão");

        jLabel12.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel12.setText("Coeficiente de Variação");

        jLabel13.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel13.setText("Gráfico:");

        jComboBox3.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Histograma", "Poligono de frequência", "Curva de frequência" }));

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));
        jPanel1.setLayout(new java.awt.BorderLayout());

        jButton8.setText("Mostrar gráfico");
        jButton8.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton8ActionPerformed(evt);
            }
        });

        jLabel14.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        jLabel14.setText("Resultados");

        jButton9.setText("Ajuda");
        jButton9.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton9ActionPerformed(evt);
            }
        });

        jButton10.setText("Limpar tabela");
        jButton10.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton10ActionPerformed(evt);
            }
        });

        jButton11.setText("Limpar Resultados");
        jButton11.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton11ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jButton2)
                .addGap(0, 0, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 87, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel2))
                        .addGap(26, 26, 26)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(txt_freq, javax.swing.GroupLayout.DEFAULT_SIZE, 105, Short.MAX_VALUE)
                            .addComponent(txt_valor))
                        .addGap(30, 30, 30)
                        .addComponent(jButton3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addComponent(jLabel8)
                                .addGap(651, 651, 651))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addComponent(jButton7, javax.swing.GroupLayout.PREFERRED_SIZE, 93, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jButton5)
                                .addGap(283, 283, 283))))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 520, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(73, 73, 73)
                                .addComponent(jLabel9)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jTextFieldDelim, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(24, 24, 24)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jButton6)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                        .addComponent(jButton4)
                                        .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, 259, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(jButton10))))
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                .addComponent(jLabel13, javax.swing.GroupLayout.PREFERRED_SIZE, 78, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jComboBox3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jButton8)
                                .addGap(0, 0, Short.MAX_VALUE))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                                .addComponent(jLabel3)
                                                .addGap(49, 49, 49)
                                                .addComponent(txt_media, javax.swing.GroupLayout.PREFERRED_SIZE, 91, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addGap(30, 30, 30)
                                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                    .addComponent(jLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, 98, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                    .addComponent(jLabel11)
                                                    .addComponent(jLabel12)
                                                    .addGroup(layout.createSequentialGroup()
                                                        .addComponent(jLabel7)
                                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                        .addComponent(jComboBox2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                                .addGroup(layout.createSequentialGroup()
                                                    .addGap(520, 520, 520)
                                                    .addComponent(txt_var, javax.swing.GroupLayout.PREFERRED_SIZE, 101, javax.swing.GroupLayout.PREFERRED_SIZE))
                                                .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                                    .addGroup(layout.createSequentialGroup()
                                                        .addComponent(jLabel5)
                                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                        .addComponent(txt_moda, javax.swing.GroupLayout.PREFERRED_SIZE, 92, javax.swing.GroupLayout.PREFERRED_SIZE))
                                                    .addComponent(txt_mediana, javax.swing.GroupLayout.PREFERRED_SIZE, 92, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                    .addGroup(layout.createSequentialGroup()
                                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                            .addGroup(layout.createSequentialGroup()
                                                                .addComponent(jLabel6)
                                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                                .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                                            .addComponent(jLabel4))
                                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                        .addComponent(txt_quartil, javax.swing.GroupLayout.PREFERRED_SIZE, 92, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                                .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                                    .addGap(520, 520, 520)
                                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                                        .addComponent(txt_cv)
                                                        .addComponent(txt_despadrao)
                                                        .addComponent(txt_percentil, javax.swing.GroupLayout.PREFERRED_SIZE, 101, javax.swing.GroupLayout.PREFERRED_SIZE))))
                                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                                .addComponent(jLabel14)
                                                .addGap(44, 44, 44)
                                                .addComponent(jButton9)))
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                        .addGap(0, 0, Short.MAX_VALUE)
                                        .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 93, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(38, 38, 38)))
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jButton11)
                                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 237, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addGap(295, 295, 295))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(67, 67, 67)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 405, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton4)
                    .addComponent(jButton11))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButton10)
                .addGap(10, 10, 10)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel8))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton5)
                    .addComponent(jButton7)
                    .addComponent(jButton6)
                    .addComponent(jTextFieldDelim, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel9))
                .addContainerGap(198, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addComponent(jButton2)
                .addGap(10, 10, 10)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(txt_valor)
                    .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, 32, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jButton3)
                        .addComponent(jButton1))
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel2)
                        .addComponent(txt_freq, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel14)
                        .addGap(21, 21, 21)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(txt_media, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jLabel10, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(txt_var)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel4)
                            .addComponent(txt_mediana, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel11)
                            .addComponent(txt_despadrao, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel5)
                            .addComponent(txt_moda, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel12)
                            .addComponent(txt_cv, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(3, 3, 3)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel6)
                            .addComponent(jLabel7)
                            .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jComboBox2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txt_percentil, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txt_quartil, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel13, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jComboBox3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jButton8))
                        .addGap(61, 61, 61)
                        .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 277, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(123, 123, 123))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jButton9)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed

        //fazer a media
        double media = 0;        
        double valor = 0;
        double freq = 0;
        double res = 0;
        double res2 = 0;
        double freqtotal = 0;
        
         
        for(int i=0; i<jTable1.getRowCount();i++){
            for (int j = 0; j < 1; j++) {    //uma matriz para pegar os valores da coluna --> utilizado j<1 pois são duas colunas.
                valor = Double.parseDouble(jTable1.getValueAt(i, 0).toString());  //valor pego que o usuraio colocou
                freq = Double.parseDouble(jTable1.getValueAt(i, 1).toString());  //frequencia do valor representado 
                res = valor * freq;  
                res2 = res2 + res; //soma de tudo
                freqtotal = freqtotal + freq; //frequencia de tudo
            }
        }
         media = res2 /  freqtotal;
         media = Math.round(media*1000.0)/1000.0; //arrendodar para ficar com 3 casas decimais
         txt_media.setText(""+media);
         
         // ordenação de dados
         freq = 0;   //zerar para criar o vetor para odernar os dados para fazer mediana, quartil e etc
         valor = 0;   // msm coisa
         int tamanho = (int) freqtotal; // colocando a frequencia total que estava em double para int  -- mas não tera problema que o sistema não aceita frquencia decimal
         int c = 0;
         double dados [] = new double [tamanho];
         for(int i=0; i<jTable1.getRowCount();i++){
            for (int j = 0; j < 1; j++) {
                freq = Double.parseDouble(jTable1.getValueAt(i, 1).toString());
                for (int k = 0; k < freq; k++) {  
                    dados[c] = Double.parseDouble(jTable1.getValueAt(i, 0).toString()); //vetor com os dados inserido pelo o usuario
                    c++;
                }
            }
        }
         //colocar os dados em ordem cresente
       
       double segura;
        for (int i = 0; i < dados.length; i++) 
        {
             for (int j = i+1; j < dados.length; j++) 
             {
               if (dados[j]<dados[i])
               {
                   segura = dados[i];
                   dados[i] = dados[j];
                   dados[j] = segura;
               }
             }
        }
       // Fazer a mediana
       double med;
       int tamanho0;
       tamanho0 = dados.length - 1; // pq o vetor começa com daods[0]
       if(tamanho % 2 == 0)
       {
           //mediana quando o conjunto é par 
            med = (dados[((tamanho0) /2)]+dados[(tamanho0/2 + 1)]) /2 ;
       }
       else {
           //mediana quando o conjunto é impar
            med = dados[(tamanho0 + 1) /2]; 
       }
       txt_mediana.setText(""+med);
       
        //Fazer vetor freq e valor para fazer uma matriz
       int linhas = jTable1.getRowCount();
       double freqv [] = new double [linhas];
       double freqvnormal [] = new double [linhas];
       double valorv [] = new double [linhas];
       double valorvnormal [] = new double [linhas];
       int c2 = 0;
       for(int i=0; i<jTable1.getRowCount();i++){
            for (int j = 0; j < 1; j++) {
                freqv [c2] = Double.parseDouble(jTable1.getValueAt(i, 1).toString());
                freqvnormal [c2] = Double.parseDouble(jTable1.getValueAt(i, 1).toString());
                valorv[c2] = Double.parseDouble(jTable1.getValueAt(i, 0).toString());
                valorvnormal[c2] = Double.parseDouble(jTable1.getValueAt(i, 0).toString());
                c2++;
            }
        }
       //freqv em crescente 
       for (int i = 0; i < freqv.length; i++) 
        {
             for (int j = i+1; j < freqv.length; j++) 
             {
               if (freqv[j]<freqv[i])
               {
                   segura = freqv[i];
                   freqv[i] = freqv[j];
                   freqv[j] = segura;
               }
             }
        }
       /** matriz
       double matrizfreqv [][] = new double [linhas][2];
        for (int i = 0; i < linhas; i++) {
            for (int j = 0; j < 2; j++) {
                if (j<=0){
                    matrizfreqv [i][j] =  valorv[i];
                }
                else{ matrizfreqv [i][j] =  freqv[i];
                }
                }
        }
        for (int i = 0; i < linhas; i++) {
            for (int j = 0; j < 2; j++) {
                System.out.print(matrizfreqv[i][j] +" ");   
            }
            System.out.println("");
        } **/
      //pegar maior valor em freqv[]
         int x = (int) freqv [freqv.length - 1]; //achamos a maior frequencia
         //achar nas freqeuncias qual seria o indice que a maior frequencia está
         double item;
         int index = 0;
        for(int i = 0; i < freqv.length; i++) {
                if(freqvnormal[i] == x) {      //quando o valor da coluna (que está em um vetor) for = a frequencia maior, pegar o i
                    index = i;
                    break;
                }
                    }
        //puxar o valor com o idice achado da coluna da freq
        double moda = 0;
        for (int i = 0; i < linhas; i++) {
           moda = Double.parseDouble(jTable1.getValueAt(index, 0).toString());
        }
        txt_moda.setText(""+moda);
       
      //Fazer o Quartil1
      
       double posicaoq = 1;
       double kq = 0;
        kq = posicaoq * (dados.length + 1) /4; //achar o k para fazer a formula
       double kqarredondado = Math.floor(kq);
        int kqartmanho = (int) kqarredondado;
        if (jComboBox1.getSelectedItem().equals("1")){
        double quartil1 = 0;
            quartil1 = dados[kqartmanho-1] + ((kq - kqarredondado) * (dados[(kqartmanho)] - dados[kqartmanho-1])); // dados[kqartmanho-1] pq começa no zero e na estatistica no 1
           txt_quartil.setText(""+quartil1);}
        else{
      //quartil3
       double quartil= 0;
            quartil = dados[kqartmanho-1] + ((kq - kqarredondado) * (dados[(kqartmanho)] - dados[kqartmanho-1])); // dados[kqartmanho-1] pq começa no zero e na estatistica no 1
           txt_quartil.setText(""+quartil);
        }
      //percentil
      
      
      
      //Variancia
      double var = 0;
      double varsegura = 0;
      double somavar = 0;
        for (int i = 0; i < dados.length; i++) {
            varsegura = Math.pow((dados[i] - media),2);
            somavar = somavar + varsegura;
        }
        var = somavar / (tamanho - 1);
        var = Math.round(var*1000.0)/1000.0;
        txt_var.setText(""+var);
        
        //Desvio Padrão
        double despadrao = 0;
        despadrao = Math.sqrt(var);
        despadrao = Math.round(despadrao*1000.0)/1000.0;
        txt_despadrao.setText(""+despadrao);
        
        //Coeficiente de Variação
        double cv = 0;
        cv = despadrao / media;
        cv = Math.round(cv*1000.0)/1000.0;
        cv = cv *100;
        txt_cv.setText(""+cv+"%");
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
      Menu frame = new Menu();
                frame.setVisible(true);
                dispose();
    }//GEN-LAST:event_jButton2ActionPerformed

    private void txt_mediaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txt_mediaActionPerformed
       
    }//GEN-LAST:event_txt_mediaActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
       String valor1 = txt_valor.getText();
        String freq1 = txt_freq.getText();

        try {  
              if(valor1.equals("") || freq1.equals(""))
          {
               throw new Exception ("Prenencha os 2 dados");
            }  
        double valor; 
        int freq;
        valor = Double.parseDouble(txt_valor.getText());
        freq = Integer.parseInt(txt_freq.getText());
        if (freq < 0)
        {
            throw new Exception ("Frequencia não pode ser negativa");
        }
       
        DefaultTableModel dadosImc = (DefaultTableModel) jTable1.getModel();
          Object[] dados = {valor,freq}; 
            dadosImc.addRow(dados);
        } 
        
       catch(NumberFormatException e){
            JOptionPane.showMessageDialog(this, "Numeros com formação incompatíveis", "ERRO!", JOptionPane.ERROR_MESSAGE);
        }
        catch (NullPointerException ex) {
            JOptionPane.showMessageDialog(this, ex.getMessage() , "ERRO!", JOptionPane.ERROR_MESSAGE);
        
        } 
        
        catch (Exception ex) {
            JOptionPane.showMessageDialog(this, ex.getMessage() , "ERRO!", JOptionPane.ERROR_MESSAGE);
        
        } 
        txt_valor.setText("");
        txt_freq.setText("");
        
        
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
       DefaultTableModel dtm = (DefaultTableModel)jTable1.getModel();
        if (jTable1.getSelectedRow() >= 0){
            dtm.removeRow(jTable1.getSelectedRow());
            jTable1.setModel(dtm);
            JOptionPane.showMessageDialog(null, "Linha excluida!!"
                    + "Dados só serão atualizados depois de clicar em atualizar");
        }else{
            JOptionPane.showMessageDialog(null, "Favor selecionar uma linha");
        }
    }//GEN-LAST:event_jButton4ActionPerformed

    private void jComboBox2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBox2ActionPerformed
        
    }//GEN-LAST:event_jComboBox2ActionPerformed

    private void jTextFieldDelimActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextFieldDelimActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextFieldDelimActionPerformed
    File arquivo;
    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
       JFileChooser jfc = new JFileChooser();
        if(jfc.showOpenDialog(this)== jfc.APPROVE_OPTION) {
            arquivo = jfc.getSelectedFile();
            jTextField1.setText(arquivo.getAbsolutePath());
            jButton2.setEnabled(true);
        } else {
            arquivo = null;
            jTextField1.setText("");
            jButton2.setEnabled(false);
            
        }
    }//GEN-LAST:event_jButton5ActionPerformed

    private void jButton6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton6ActionPerformed
     String delimitador = jTextFieldDelim.getText();
        try{
          FileReader reader = new FileReader(arquivo);
          BufferedReader buffer = new BufferedReader(reader);
          String linha = buffer.readLine();
          StringTokenizer tokens = new StringTokenizer(linha, delimitador);
          String header [] = new String [tokens.countTokens()];
          if (tokens.countTokens() >2)
          {
              throw new Exception ("O arquivo que você selecionou possui mais que duas coluna!");
          }
          for (int i = 0; i < header.length; i++) {
                header[i] = tokens.nextToken();
          }
          DefaultTableModel model = new DefaultTableModel(header, 0);
          linha = buffer.readLine();
          while(linha != null){
                tokens = new StringTokenizer(linha, delimitador);
                String row [] = new String[tokens.countTokens()];
                for (int i = 0; i < row.length; i++) {
                  row [i] = tokens.nextToken();
              }
                model.addRow(row);
                linha = buffer.readLine();
          }
          
          jTable1.setModel(model);     
        }
        catch (NumberFormatException e) {
                JOptionPane.showMessageDialog(this, 
                        e.getMessage(), 
                        "ERRO!", JOptionPane.ERROR_MESSAGE);
            }
        catch (Exception e) {
            JOptionPane.showMessageDialog(this, e.getMessage(), "Erro", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_jButton6ActionPerformed

//Metodo exportar tabela para Excel
    public void toExcel(JTable table, File file) throws Exception {
        TableModel model = table.getModel();
        FileWriter excel = new FileWriter(file);

        for (int i = 0; i < model.getColumnCount(); i++) {
            excel.write(model.getColumnName(i) + "\t");
        }

        excel.write("\n");

        for (int i = 0; i < model.getRowCount(); i++) {
            for (int j = 0; j < model.getColumnCount(); j++) {
                excel.write(model.getValueAt(i, j).toString() + "\t");
            }
            excel.write("\n");
        }

        excel.close();
        System.out.println("write out to: " + file);
    }
    
    private void jButton7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton7ActionPerformed
      //Botão Exportar Tabela para Excel                                        
        JFileChooser fc = new JFileChooser();
        int option = fc.showSaveDialog(jTable1);
        if (option == JFileChooser.APPROVE_OPTION) {
            String filename = fc.getSelectedFile().getName();
            String path = fc.getSelectedFile().getParentFile().getPath();
            int len = filename.length();
            String ext = "";
            String file = "";
            if (len > 4) {
                ext = filename.substring(len - 4, len);
            }
            if (ext.equals(".xls")) {
                file = path + "\\" + filename;
            } else {
                file = path + "\\" + filename + ".xls";
            }
            try {
                toExcel(jTable1, new File(file));
            } catch (Exception ex) {
                
            }
        }                                        
    
    }//GEN-LAST:event_jButton7ActionPerformed

    private void txt_cvActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txt_cvActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txt_cvActionPerformed

    private void jButton8ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton8ActionPerformed
        // TODO add your handling code here:
        
        
         /**int linhas = jTable1.getRowCount();
       double freqv [] = new double [linhas];
       double valorv [] = new double [linhas];     
       int c2 = 0;
       for(int i=0; i<jTable1.getRowCount();i++){
            for (int j = 0; j < 1; j++) {
                freqv [c2] = Double.parseDouble(jTable1.getValueAt(i, 1).toString());
                valorv[c2] = Double.parseDouble(jTable1.getValueAt(i, 0).toString());
                c2++;
            }
        }
       HistogramDataset dataset = new HistogramDataset();
       dataset.setType(HistogramType.RELATIVE_FREQUENCY);
       dataset.addSeries("Histograma",valorv,10);
       String plotTitle = "Histogram"; 
       String xaxis = "number";
       String yaxis = "value"; 
       PlotOrientation orientation = PlotOrientation.VERTICAL; 
       boolean show = false; 
       boolean toolTips = false;
       boolean urls = false; 
       JFreeChart chart = ChartFactory.createHistogram( plotTitle, xaxis, yaxis, 
                dataset, orientation, show, toolTips, urls);
       //criar uma nova frame
      /** CategoryPlot p=chart.getCategoryPlot();
           p.setRangeGridlinePaint(Color.black);
           ChartFrame frame = new ChartFrame("Histograma",chart);
           frame.setVisible(true);
           frame.setSize(450,350);**/
          if(jComboBox3.getSelectedItem().equals("Histograma")){
        try{
           JFreeChart chart = ChartFactory.createHistogram("Histograma", "Valor", "Frequência",dataset(), PlotOrientation.VERTICAL,true,true,false);
            chart.setBackgroundPaint(Color.white);
            XYPlot plot = chart.getXYPlot();
            plot.setBackgroundPaint(Color.lightGray);
            plot.setDomainGridlinePaint(Color.white);
            plot.setRangeGridlinePaint(Color.white);
            NumberAxis axis = (NumberAxis) plot.getDomainAxis();
            axis.setTickUnit(new NumberTickUnit(1));
            ChartPanel chartPanel = new ChartPanel(chart);
            chartPanel.setPreferredSize(jPanel1.getSize());
            jPanel1.add(chartPanel, java.awt.BorderLayout.CENTER);
            this.getContentPane().validate();
            this.getContentPane().repaint();
            
                }
            catch (Exception ex) {JOptionPane.showMessageDialog(this, ex.getMessage(),"ERRO", JOptionPane.ERROR_MESSAGE);
            }
          }
    }//GEN-LAST:event_jButton8ActionPerformed

    private void jButton9ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton9ActionPerformed
                Ajuda frame = new Ajuda();
                frame.setVisible(true);  
                
    }//GEN-LAST:event_jButton9ActionPerformed

    private void jButton10ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton10ActionPerformed
        DefaultTableModel model = (DefaultTableModel) jTable1.getModel();
        model.setRowCount(0);
        
    }//GEN-LAST:event_jButton10ActionPerformed

    private void jButton11ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton11ActionPerformed
        txt_media.setText("");
        txt_mediana.setText("");
        txt_moda.setText("");
        txt_despadrao.setText("");
        txt_var.setText("");
        txt_cv.setText("");
        txt_quartil.setText("");
        txt_percentil.setText("");
    }//GEN-LAST:event_jButton11ActionPerformed
   /** private XYDataset createXYDataset() {
        XYSeriesCollection dataset = new XYSeriesCollection();
        XYSeries serie = new XYSeries("Gráfico");
         
        int n = jTable1.getRowCount();
        for (int i = 0; i < n; i++) {
            serie.add(i + 1, new Double (jTable1.getValueAt(i, 1).toString().replace(',' , '.')));
                }
        dataset.addSeries(serie);
        return dataset;
    }**/
    private IntervalXYDataset dataset(){//dataset do histograma
        XYSeriesCollection dataset = new XYSeriesCollection();
        XYSeries serie = new XYSeries("Gráfico");
        int n = jTable1.getRowCount();
        for (int i = 0; i < n; i++) {
        serie.add(i + 1, new Double (jTable1.getValueAt(i, 1).toString().replace(',' , '.'))); // i + 1 -> para não pegar o título
        }
        dataset.addSeries(serie);
        return dataset;
}
    
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(CalculadoraEstatistica.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(CalculadoraEstatistica.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(CalculadoraEstatistica.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(CalculadoraEstatistica.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new CalculadoraEstatistica().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton10;
    private javax.swing.JButton jButton11;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    private javax.swing.JButton jButton6;
    private javax.swing.JButton jButton7;
    private javax.swing.JButton jButton8;
    private javax.swing.JButton jButton9;
    private javax.swing.JComboBox<String> jComboBox1;
    private javax.swing.JComboBox<String> jComboBox2;
    private javax.swing.JComboBox<String> jComboBox3;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JTextField jTextFieldDelim;
    private javax.swing.JTextField txt_cv;
    private javax.swing.JTextField txt_despadrao;
    private javax.swing.JTextField txt_freq;
    private javax.swing.JTextField txt_media;
    private javax.swing.JTextField txt_mediana;
    private javax.swing.JTextField txt_moda;
    private javax.swing.JTextField txt_percentil;
    private javax.swing.JTextField txt_quartil;
    private javax.swing.JTextField txt_valor;
    private javax.swing.JTextField txt_var;
    // End of variables declaration//GEN-END:variables
}
